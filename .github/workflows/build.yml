---

name: Build
on: [push]

jobs:
  build:
    env:
      GONOSUMDB: "github.com/moby/moby"
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          make setup
          go get -v -t ./...

      - name: Unit Test
        run: |
          make unit_test

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v1
        with:
          version: v0.147.2
          args: release --rm-dist --snapshot

      - name: Upload Code Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # required

      - uses: actions/upload-artifact@v2
        with:
          name: connector
          path: |
            ./dist
            ./dist/*.tar.gz

  functional_test:
    name: Functional Test
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        folder: [
          './test/simple',
          './test/kubernetes',
        ]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: connector
          path: dist

      - name: Setup Docker Multi-Arch Builder
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name multi
          docker buildx use multi
          docker buildx inspect --bootstrap

      - name: Build and load into local Docker
        run: |
          docker buildx build --platform linux/amd64 \
          -t connector:dev \
            -f ./Dockerfile \
            ./dist \
            --load

      - name: Install Deps
        run: |
          curl https://shipyard.run/install | bash
          echo "${GITHUB_WORKSPACE}/dist/connector_linux_amd64" >> $GITHUB_PATH
          chmod +x ${GITHUB_WORKSPACE}/dist/connector_linux_amd64/connector

      - name: ${{ matrix.folder }}
        run: |
          cd ${{ matrix.folder }}
          shipyard test --var connector_image=connector:dev
