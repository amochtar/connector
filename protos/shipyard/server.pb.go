// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package shipyard

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageType int32

const (
	MessageType_HELLO          MessageType = 0
	MessageType_CLOSED         MessageType = 1
	MessageType_DATA           MessageType = 2
	MessageType_NEW_CONNECTION MessageType = 3
	MessageType_WRITE_DONE     MessageType = 4
	MessageType_READ_DONE      MessageType = 5
	MessageType_ERROR          MessageType = 6
)

var MessageType_name = map[int32]string{
	0: "HELLO",
	1: "CLOSED",
	2: "DATA",
	3: "NEW_CONNECTION",
	4: "WRITE_DONE",
	5: "READ_DONE",
	6: "ERROR",
}

var MessageType_value = map[string]int32{
	"HELLO":          0,
	"CLOSED":         1,
	"DATA":           2,
	"NEW_CONNECTION": 3,
	"WRITE_DONE":     4,
	"READ_DONE":      5,
	"ERROR":          6,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

type ServiceType int32

const (
	ServiceType_LOCAL  ServiceType = 0
	ServiceType_REMOTE ServiceType = 1
)

var ServiceType_name = map[int32]string{
	0: "LOCAL",
	1: "REMOTE",
}

var ServiceType_value = map[string]int32{
	"LOCAL":  0,
	"REMOTE": 1,
}

func (x ServiceType) String() string {
	return proto.EnumName(ServiceType_name, int32(x))
}

func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

type NullResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NullResponse) Reset()         { *m = NullResponse{} }
func (m *NullResponse) String() string { return proto.CompactTextString(m) }
func (*NullResponse) ProtoMessage()    {}
func (*NullResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *NullResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NullResponse.Unmarshal(m, b)
}
func (m *NullResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NullResponse.Marshal(b, m, deterministic)
}
func (m *NullResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NullResponse.Merge(m, src)
}
func (m *NullResponse) XXX_Size() int {
	return xxx_messageInfo_NullResponse.Size(m)
}
func (m *NullResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NullResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NullResponse proto.InternalMessageInfo

type OpenData struct {
	ServiceId            string      `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ConnectionId         string      `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Location             string      `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Type                 MessageType `protobuf:"varint,4,opt,name=type,proto3,enum=shipyard.MessageType" json:"type,omitempty"`
	Data                 []byte      `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *OpenData) Reset()         { *m = OpenData{} }
func (m *OpenData) String() string { return proto.CompactTextString(m) }
func (*OpenData) ProtoMessage()    {}
func (*OpenData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *OpenData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenData.Unmarshal(m, b)
}
func (m *OpenData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenData.Marshal(b, m, deterministic)
}
func (m *OpenData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenData.Merge(m, src)
}
func (m *OpenData) XXX_Size() int {
	return xxx_messageInfo_OpenData.Size(m)
}
func (m *OpenData) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenData.DiscardUnknown(m)
}

var xxx_messageInfo_OpenData proto.InternalMessageInfo

func (m *OpenData) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *OpenData) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *OpenData) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *OpenData) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_HELLO
}

func (m *OpenData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ExposeRequest struct {
	Name                 string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RemoteServerAddr     string      `protobuf:"bytes,2,opt,name=remoteServerAddr,proto3" json:"remoteServerAddr,omitempty"`
	ServiceAddr          string      `protobuf:"bytes,3,opt,name=serviceAddr,proto3" json:"serviceAddr,omitempty"`
	LocalPort            int32       `protobuf:"varint,4,opt,name=localPort,proto3" json:"localPort,omitempty"`
	RemotePort           int32       `protobuf:"varint,5,opt,name=remotePort,proto3" json:"remotePort,omitempty"`
	Type                 ServiceType `protobuf:"varint,6,opt,name=type,proto3,enum=shipyard.ServiceType" json:"type,omitempty"`
	Matches              []*Match    `protobuf:"bytes,7,rep,name=matches,proto3" json:"matches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ExposeRequest) Reset()         { *m = ExposeRequest{} }
func (m *ExposeRequest) String() string { return proto.CompactTextString(m) }
func (*ExposeRequest) ProtoMessage()    {}
func (*ExposeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *ExposeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExposeRequest.Unmarshal(m, b)
}
func (m *ExposeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExposeRequest.Marshal(b, m, deterministic)
}
func (m *ExposeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExposeRequest.Merge(m, src)
}
func (m *ExposeRequest) XXX_Size() int {
	return xxx_messageInfo_ExposeRequest.Size(m)
}
func (m *ExposeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExposeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExposeRequest proto.InternalMessageInfo

func (m *ExposeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExposeRequest) GetRemoteServerAddr() string {
	if m != nil {
		return m.RemoteServerAddr
	}
	return ""
}

func (m *ExposeRequest) GetServiceAddr() string {
	if m != nil {
		return m.ServiceAddr
	}
	return ""
}

func (m *ExposeRequest) GetLocalPort() int32 {
	if m != nil {
		return m.LocalPort
	}
	return 0
}

func (m *ExposeRequest) GetRemotePort() int32 {
	if m != nil {
		return m.RemotePort
	}
	return 0
}

func (m *ExposeRequest) GetType() ServiceType {
	if m != nil {
		return m.Type
	}
	return ServiceType_LOCAL
}

func (m *ExposeRequest) GetMatches() []*Match {
	if m != nil {
		return m.Matches
	}
	return nil
}

type ExposeResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExposeResponse) Reset()         { *m = ExposeResponse{} }
func (m *ExposeResponse) String() string { return proto.CompactTextString(m) }
func (*ExposeResponse) ProtoMessage()    {}
func (*ExposeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3}
}

func (m *ExposeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExposeResponse.Unmarshal(m, b)
}
func (m *ExposeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExposeResponse.Marshal(b, m, deterministic)
}
func (m *ExposeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExposeResponse.Merge(m, src)
}
func (m *ExposeResponse) XXX_Size() int {
	return xxx_messageInfo_ExposeResponse.Size(m)
}
func (m *ExposeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExposeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExposeResponse proto.InternalMessageInfo

func (m *ExposeResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListenerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LocalPort            int32    `protobuf:"varint,2,opt,name=localPort,proto3" json:"localPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenerRequest) Reset()         { *m = ListenerRequest{} }
func (m *ListenerRequest) String() string { return proto.CompactTextString(m) }
func (*ListenerRequest) ProtoMessage()    {}
func (*ListenerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{4}
}

func (m *ListenerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenerRequest.Unmarshal(m, b)
}
func (m *ListenerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenerRequest.Marshal(b, m, deterministic)
}
func (m *ListenerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenerRequest.Merge(m, src)
}
func (m *ListenerRequest) XXX_Size() int {
	return xxx_messageInfo_ListenerRequest.Size(m)
}
func (m *ListenerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenerRequest proto.InternalMessageInfo

func (m *ListenerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ListenerRequest) GetLocalPort() int32 {
	if m != nil {
		return m.LocalPort
	}
	return 0
}

type DestroyRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerAddr           string   `protobuf:"bytes,2,opt,name=serverAddr,proto3" json:"serverAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DestroyRequest) Reset()         { *m = DestroyRequest{} }
func (m *DestroyRequest) String() string { return proto.CompactTextString(m) }
func (*DestroyRequest) ProtoMessage()    {}
func (*DestroyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{5}
}

func (m *DestroyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DestroyRequest.Unmarshal(m, b)
}
func (m *DestroyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DestroyRequest.Marshal(b, m, deterministic)
}
func (m *DestroyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DestroyRequest.Merge(m, src)
}
func (m *DestroyRequest) XXX_Size() int {
	return xxx_messageInfo_DestroyRequest.Size(m)
}
func (m *DestroyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DestroyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DestroyRequest proto.InternalMessageInfo

func (m *DestroyRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DestroyRequest) GetServerAddr() string {
	if m != nil {
		return m.ServerAddr
	}
	return ""
}

type Match struct {
	Http                 *Http    `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	GRPC                 *Grpc    `protobuf:"bytes,2,opt,name=gRPC,proto3" json:"gRPC,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Match) Reset()         { *m = Match{} }
func (m *Match) String() string { return proto.CompactTextString(m) }
func (*Match) ProtoMessage()    {}
func (*Match) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{6}
}

func (m *Match) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Match.Unmarshal(m, b)
}
func (m *Match) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Match.Marshal(b, m, deterministic)
}
func (m *Match) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Match.Merge(m, src)
}
func (m *Match) XXX_Size() int {
	return xxx_messageInfo_Match.Size(m)
}
func (m *Match) XXX_DiscardUnknown() {
	xxx_messageInfo_Match.DiscardUnknown(m)
}

var xxx_messageInfo_Match proto.InternalMessageInfo

func (m *Match) GetHttp() *Http {
	if m != nil {
		return m.Http
	}
	return nil
}

func (m *Match) GetGRPC() *Grpc {
	if m != nil {
		return m.GRPC
	}
	return nil
}

type Http struct {
	Headers              []*Header `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Http) Reset()         { *m = Http{} }
func (m *Http) String() string { return proto.CompactTextString(m) }
func (*Http) ProtoMessage()    {}
func (*Http) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{7}
}

func (m *Http) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Http.Unmarshal(m, b)
}
func (m *Http) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Http.Marshal(b, m, deterministic)
}
func (m *Http) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Http.Merge(m, src)
}
func (m *Http) XXX_Size() int {
	return xxx_messageInfo_Http.Size(m)
}
func (m *Http) XXX_DiscardUnknown() {
	xxx_messageInfo_Http.DiscardUnknown(m)
}

var xxx_messageInfo_Http proto.InternalMessageInfo

func (m *Http) GetHeaders() []*Header {
	if m != nil {
		return m.Headers
	}
	return nil
}

type Header struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Exact                string   `protobuf:"bytes,2,opt,name=exact,proto3" json:"exact,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{8}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Header) GetExact() string {
	if m != nil {
		return m.Exact
	}
	return ""
}

type Grpc struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Grpc) Reset()         { *m = Grpc{} }
func (m *Grpc) String() string { return proto.CompactTextString(m) }
func (*Grpc) ProtoMessage()    {}
func (*Grpc) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{9}
}

func (m *Grpc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Grpc.Unmarshal(m, b)
}
func (m *Grpc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Grpc.Marshal(b, m, deterministic)
}
func (m *Grpc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Grpc.Merge(m, src)
}
func (m *Grpc) XXX_Size() int {
	return xxx_messageInfo_Grpc.Size(m)
}
func (m *Grpc) XXX_DiscardUnknown() {
	xxx_messageInfo_Grpc.DiscardUnknown(m)
}

var xxx_messageInfo_Grpc proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("shipyard.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("shipyard.ServiceType", ServiceType_name, ServiceType_value)
	proto.RegisterType((*NullResponse)(nil), "shipyard.NullResponse")
	proto.RegisterType((*OpenData)(nil), "shipyard.OpenData")
	proto.RegisterType((*ExposeRequest)(nil), "shipyard.ExposeRequest")
	proto.RegisterType((*ExposeResponse)(nil), "shipyard.ExposeResponse")
	proto.RegisterType((*ListenerRequest)(nil), "shipyard.ListenerRequest")
	proto.RegisterType((*DestroyRequest)(nil), "shipyard.DestroyRequest")
	proto.RegisterType((*Match)(nil), "shipyard.Match")
	proto.RegisterType((*Http)(nil), "shipyard.Http")
	proto.RegisterType((*Header)(nil), "shipyard.Header")
	proto.RegisterType((*Grpc)(nil), "shipyard.Grpc")
}

func init() {
	proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7)
}

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 636 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcb, 0x6e, 0x9b, 0x40,
	0x14, 0x2d, 0x04, 0x1c, 0xfb, 0xda, 0x21, 0xe8, 0xaa, 0x0f, 0x6a, 0xb5, 0x91, 0x45, 0xbb, 0x70,
	0xbc, 0x88, 0x2a, 0x77, 0xd3, 0x5d, 0xeb, 0x00, 0x6a, 0x2c, 0x39, 0x26, 0x1a, 0x5b, 0xca, 0xd2,
	0xa2, 0x70, 0x15, 0x5b, 0xb2, 0x81, 0xc2, 0xa4, 0x8a, 0x3f, 0xa0, 0x1f, 0xd3, 0xaf, 0xea, 0xaf,
	0x54, 0x0c, 0x60, 0xb0, 0x93, 0xac, 0xba, 0x63, 0xce, 0x39, 0x73, 0x5f, 0x9c, 0x3b, 0xd0, 0x49,
	0x29, 0xf9, 0x45, 0xc9, 0x45, 0x9c, 0x44, 0x3c, 0xc2, 0x66, 0xba, 0x5c, 0xc5, 0x5b, 0x2f, 0x09,
	0x4c, 0x0d, 0x3a, 0xd3, 0xfb, 0xf5, 0x9a, 0x51, 0x1a, 0x47, 0x61, 0x4a, 0xe6, 0x1f, 0x09, 0x9a,
	0x6e, 0x4c, 0xa1, 0xed, 0x71, 0x0f, 0xdf, 0x03, 0x64, 0xd7, 0x56, 0x3e, 0x2d, 0x56, 0x81, 0x21,
	0xf5, 0xa4, 0x7e, 0x8b, 0xb5, 0x0a, 0x64, 0x1c, 0xe0, 0x07, 0x38, 0xf1, 0xa3, 0x30, 0x24, 0x9f,
	0xaf, 0xa2, 0x30, 0x53, 0xc8, 0x42, 0xd1, 0xa9, 0xc0, 0x71, 0x80, 0x5d, 0x68, 0xae, 0x23, 0xdf,
	0xcb, 0x4e, 0xc6, 0x91, 0xe0, 0x77, 0x67, 0x3c, 0x07, 0x85, 0x6f, 0x63, 0x32, 0x94, 0x9e, 0xd4,
	0xd7, 0x86, 0xaf, 0x2e, 0xca, 0xaa, 0x2e, 0xae, 0x29, 0x4d, 0xbd, 0x3b, 0x9a, 0x6f, 0x63, 0x62,
	0x42, 0x82, 0x08, 0x4a, 0xe0, 0x71, 0xcf, 0x50, 0x7b, 0x52, 0xbf, 0xc3, 0xc4, 0xb7, 0xf9, 0x5b,
	0x86, 0x13, 0xe7, 0x21, 0x8e, 0x52, 0x62, 0xf4, 0xf3, 0x9e, 0x52, 0x9e, 0xa9, 0x42, 0x6f, 0x43,
	0x45, 0xa9, 0xe2, 0x1b, 0x07, 0xa0, 0x27, 0xb4, 0x89, 0x38, 0xcd, 0xc4, 0x04, 0x46, 0x41, 0x90,
	0x14, 0x85, 0x3e, 0xc2, 0xb1, 0x07, 0xed, 0xa2, 0x3d, 0x21, 0xcb, 0xeb, 0xad, 0x43, 0xf8, 0x0e,
	0x5a, 0x59, 0xf9, 0xeb, 0x9b, 0x28, 0xe1, 0xa2, 0x6e, 0x95, 0x55, 0x00, 0x9e, 0x01, 0xe4, 0x31,
	0x05, 0xad, 0x0a, 0xba, 0x86, 0xec, 0x1a, 0x6e, 0x1c, 0x36, 0x3c, 0xcb, 0x53, 0xd4, 0x1a, 0x3e,
	0x87, 0xe3, 0x8d, 0xc7, 0xfd, 0x25, 0xa5, 0xc6, 0x71, 0xef, 0xa8, 0xdf, 0x1e, 0x9e, 0xd6, 0xc6,
	0x93, 0x11, 0xac, 0xe4, 0xcd, 0x1e, 0x68, 0xe5, 0x18, 0xf2, 0xbf, 0x88, 0x1a, 0xc8, 0xbb, 0x1f,
	0x26, 0xaf, 0x02, 0xf3, 0x2b, 0x9c, 0x4e, 0x56, 0x29, 0xa7, 0x90, 0x92, 0x72, 0x54, 0x07, 0x92,
	0xfd, 0xc6, 0xe4, 0x83, 0xc6, 0xcc, 0x6f, 0xa0, 0xd9, 0x94, 0xf2, 0x24, 0xda, 0x3e, 0x77, 0xff,
	0x2c, 0xf7, 0xca, 0xde, 0x80, 0x6b, 0x88, 0xe9, 0x82, 0x2a, 0xca, 0x46, 0x13, 0x94, 0x25, 0xe7,
	0xb1, 0xb8, 0xda, 0x1e, 0x6a, 0x55, 0x57, 0x57, 0x9c, 0xc7, 0x4c, 0x70, 0x99, 0xe6, 0x8e, 0xdd,
	0x58, 0x22, 0xcc, 0x9e, 0xe6, 0x7b, 0x12, 0xfb, 0x4c, 0x70, 0xe6, 0x10, 0x94, 0xec, 0x06, 0x0e,
	0xe0, 0x78, 0x49, 0x5e, 0x40, 0x49, 0x6a, 0x48, 0x62, 0x50, 0x7a, 0x2d, 0xa4, 0x20, 0x58, 0x29,
	0x30, 0x87, 0xd0, 0xc8, 0xa1, 0x27, 0x9d, 0xf2, 0x12, 0x54, 0x7a, 0xf0, 0x7c, 0x5e, 0x54, 0x9f,
	0x1f, 0xcc, 0x06, 0x28, 0x59, 0xd6, 0xc1, 0x1a, 0xda, 0x35, 0x5b, 0x62, 0x0b, 0xd4, 0x2b, 0x67,
	0x32, 0x71, 0xf5, 0x17, 0x08, 0xd0, 0xb0, 0x26, 0xee, 0xcc, 0xb1, 0x75, 0x09, 0x9b, 0xa0, 0xd8,
	0xa3, 0xf9, 0x48, 0x97, 0x11, 0x41, 0x9b, 0x3a, 0xb7, 0x0b, 0xcb, 0x9d, 0x4e, 0x1d, 0x6b, 0x3e,
	0x76, 0xa7, 0xfa, 0x11, 0x6a, 0x00, 0xb7, 0x6c, 0x3c, 0x77, 0x16, 0xb6, 0x3b, 0x75, 0x74, 0x05,
	0x4f, 0xa0, 0xc5, 0x9c, 0x91, 0x9d, 0x1f, 0xd5, 0x2c, 0xa6, 0xc3, 0x98, 0xcb, 0xf4, 0xc6, 0xe0,
	0x23, 0xb4, 0x6b, 0x9e, 0xc8, 0x98, 0x89, 0x6b, 0x8d, 0x26, 0x79, 0x36, 0xe6, 0x5c, 0xbb, 0x73,
	0x47, 0x97, 0x86, 0x7f, 0x65, 0xd0, 0x99, 0xb0, 0x97, 0xb5, 0xdb, 0x39, 0xfc, 0x02, 0x90, 0x6d,
	0xf0, 0x8c, 0x27, 0xe4, 0x6d, 0x10, 0xab, 0x69, 0x94, 0x7b, 0xdd, 0x7d, 0x02, 0xeb, 0x4b, 0x9f,
	0x24, 0xbc, 0x2c, 0xf7, 0xa9, 0x48, 0x8d, 0x6f, 0x2a, 0xe1, 0xde, 0xa2, 0x75, 0x8d, 0xc7, 0x44,
	0x61, 0xbd, 0xcb, 0x9d, 0x53, 0xca, 0x20, 0x35, 0xed, 0xbe, 0x87, 0xba, 0xaf, 0x2b, 0xa6, 0xfe,
	0x08, 0xa1, 0x05, 0x9a, 0x95, 0x90, 0xc7, 0xa9, 0x34, 0x2d, 0xbe, 0xad, 0x94, 0x07, 0x46, 0x7e,
	0x36, 0x88, 0x0d, 0xa7, 0x45, 0xba, 0xff, 0x88, 0xf2, 0xa3, 0x21, 0x1e, 0xcc, 0xcf, 0xff, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xb7, 0x02, 0x15, 0x3c, 0x40, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RemoteConnectionClient is the client API for RemoteConnection service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteConnectionClient interface {
	// Open a stream between two servers
	OpenStream(ctx context.Context, opts ...grpc.CallOption) (RemoteConnection_OpenStreamClient, error)
	// Open a new TCP port for the local service on the server and start listening
	ExposeService(ctx context.Context, in *ExposeRequest, opts ...grpc.CallOption) (*ExposeResponse, error)
	// Close the remote TCP port and remove all resources
	DestroyService(ctx context.Context, in *DestroyRequest, opts ...grpc.CallOption) (*NullResponse, error)
	// Create a TCP socket and listen for traffic
	CreateListener(ctx context.Context, in *ListenerRequest, opts ...grpc.CallOption) (*NullResponse, error)
	// Close  a local TCP socket and stop listenng for traffic
	DestroyListener(ctx context.Context, in *ListenerRequest, opts ...grpc.CallOption) (*NullResponse, error)
}

type remoteConnectionClient struct {
	cc grpc.ClientConnInterface
}

func NewRemoteConnectionClient(cc grpc.ClientConnInterface) RemoteConnectionClient {
	return &remoteConnectionClient{cc}
}

func (c *remoteConnectionClient) OpenStream(ctx context.Context, opts ...grpc.CallOption) (RemoteConnection_OpenStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RemoteConnection_serviceDesc.Streams[0], "/shipyard.RemoteConnection/OpenStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &remoteConnectionOpenStreamClient{stream}
	return x, nil
}

type RemoteConnection_OpenStreamClient interface {
	Send(*OpenData) error
	Recv() (*OpenData, error)
	grpc.ClientStream
}

type remoteConnectionOpenStreamClient struct {
	grpc.ClientStream
}

func (x *remoteConnectionOpenStreamClient) Send(m *OpenData) error {
	return x.ClientStream.SendMsg(m)
}

func (x *remoteConnectionOpenStreamClient) Recv() (*OpenData, error) {
	m := new(OpenData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *remoteConnectionClient) ExposeService(ctx context.Context, in *ExposeRequest, opts ...grpc.CallOption) (*ExposeResponse, error) {
	out := new(ExposeResponse)
	err := c.cc.Invoke(ctx, "/shipyard.RemoteConnection/ExposeService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteConnectionClient) DestroyService(ctx context.Context, in *DestroyRequest, opts ...grpc.CallOption) (*NullResponse, error) {
	out := new(NullResponse)
	err := c.cc.Invoke(ctx, "/shipyard.RemoteConnection/DestroyService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteConnectionClient) CreateListener(ctx context.Context, in *ListenerRequest, opts ...grpc.CallOption) (*NullResponse, error) {
	out := new(NullResponse)
	err := c.cc.Invoke(ctx, "/shipyard.RemoteConnection/CreateListener", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteConnectionClient) DestroyListener(ctx context.Context, in *ListenerRequest, opts ...grpc.CallOption) (*NullResponse, error) {
	out := new(NullResponse)
	err := c.cc.Invoke(ctx, "/shipyard.RemoteConnection/DestroyListener", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteConnectionServer is the server API for RemoteConnection service.
type RemoteConnectionServer interface {
	// Open a stream between two servers
	OpenStream(RemoteConnection_OpenStreamServer) error
	// Open a new TCP port for the local service on the server and start listening
	ExposeService(context.Context, *ExposeRequest) (*ExposeResponse, error)
	// Close the remote TCP port and remove all resources
	DestroyService(context.Context, *DestroyRequest) (*NullResponse, error)
	// Create a TCP socket and listen for traffic
	CreateListener(context.Context, *ListenerRequest) (*NullResponse, error)
	// Close  a local TCP socket and stop listenng for traffic
	DestroyListener(context.Context, *ListenerRequest) (*NullResponse, error)
}

// UnimplementedRemoteConnectionServer can be embedded to have forward compatible implementations.
type UnimplementedRemoteConnectionServer struct {
}

func (*UnimplementedRemoteConnectionServer) OpenStream(srv RemoteConnection_OpenStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method OpenStream not implemented")
}
func (*UnimplementedRemoteConnectionServer) ExposeService(ctx context.Context, req *ExposeRequest) (*ExposeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExposeService not implemented")
}
func (*UnimplementedRemoteConnectionServer) DestroyService(ctx context.Context, req *DestroyRequest) (*NullResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyService not implemented")
}
func (*UnimplementedRemoteConnectionServer) CreateListener(ctx context.Context, req *ListenerRequest) (*NullResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateListener not implemented")
}
func (*UnimplementedRemoteConnectionServer) DestroyListener(ctx context.Context, req *ListenerRequest) (*NullResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyListener not implemented")
}

func RegisterRemoteConnectionServer(s *grpc.Server, srv RemoteConnectionServer) {
	s.RegisterService(&_RemoteConnection_serviceDesc, srv)
}

func _RemoteConnection_OpenStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RemoteConnectionServer).OpenStream(&remoteConnectionOpenStreamServer{stream})
}

type RemoteConnection_OpenStreamServer interface {
	Send(*OpenData) error
	Recv() (*OpenData, error)
	grpc.ServerStream
}

type remoteConnectionOpenStreamServer struct {
	grpc.ServerStream
}

func (x *remoteConnectionOpenStreamServer) Send(m *OpenData) error {
	return x.ServerStream.SendMsg(m)
}

func (x *remoteConnectionOpenStreamServer) Recv() (*OpenData, error) {
	m := new(OpenData)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RemoteConnection_ExposeService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExposeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteConnectionServer).ExposeService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shipyard.RemoteConnection/ExposeService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteConnectionServer).ExposeService(ctx, req.(*ExposeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteConnection_DestroyService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteConnectionServer).DestroyService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shipyard.RemoteConnection/DestroyService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteConnectionServer).DestroyService(ctx, req.(*DestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteConnection_CreateListener_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListenerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteConnectionServer).CreateListener(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shipyard.RemoteConnection/CreateListener",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteConnectionServer).CreateListener(ctx, req.(*ListenerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteConnection_DestroyListener_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListenerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteConnectionServer).DestroyListener(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shipyard.RemoteConnection/DestroyListener",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteConnectionServer).DestroyListener(ctx, req.(*ListenerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RemoteConnection_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shipyard.RemoteConnection",
	HandlerType: (*RemoteConnectionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExposeService",
			Handler:    _RemoteConnection_ExposeService_Handler,
		},
		{
			MethodName: "DestroyService",
			Handler:    _RemoteConnection_DestroyService_Handler,
		},
		{
			MethodName: "CreateListener",
			Handler:    _RemoteConnection_CreateListener_Handler,
		},
		{
			MethodName: "DestroyListener",
			Handler:    _RemoteConnection_DestroyListener_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "OpenStream",
			Handler:       _RemoteConnection_OpenStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "server.proto",
}
